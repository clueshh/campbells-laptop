---
- name: Install local laptop requirements
  hosts: localhost
  tasks:
    - name: Add apt keys
      tags: apt-repo-key
      ansible.builtin.apt_key:
        url: "{{ item.url }}"
        keyring: "{{ item.keyring }}"
        state: present
      become: true
      loop: "{{ apt_keys }}"

    - name: Add apt repos
      tags: apt-repo
      ansible.builtin.apt_repository:
        repo: "{{ item }}"
        state: present
      become: true
      loop: "{{ apt_repos }}"

    - name: Apt install software
      tags: [software-install, apt]
      ansible.builtin.apt:
        state: present
        name: "{{ item }}"
      become: true
      loop: "{{ apt_install }}"

    - name: Snap install software
      tags: [software-install, snap]
      community.general.snap:
        state: present
        name: "{{ item }}"
      become: true
      loop: "{{ snap_install }}"

    - name: Find all .desktop files in snap installed apps
      tags: [software-install, snap]
      ansible.builtin.find:
        recurse: false
        paths: /var/lib/snapd/desktop/applications/
        patterns: "*.desktop"
      register: find

    - name: Link snap installed apps to /usr/share/applications
      tags: [software-install, snap]
      ansible.builtin.file:
        src: "{{ item.path }}"
        path: "/usr/share/applications/{{ item.path | basename }}"
        state: link
      become: true
      loop: "{{ find.files }}"

    - name: Install aws cli
      tags: [software-install, awscli]
      ansible.builtin.import_role:
        name: deekayen.awscli2

    - name: Install oh-my-zsh
      tags: [zsh, ohmyzsh]
      ansible.builtin.import_role:
        name: manala.roles.ohmyzsh
      become: true

    - name: Install p10k
      tags: [zsh, p10k]
      ansible.builtin.import_role:
        name: diodonfrost.p10k
      become: true

    - name: Overwrite .p10k.zsh
      tags: [zsh, p10k, p10k-zsh]
      ansible.builtin.copy:
        src: "files/p10k/.p10k.zsh"
        dest: "{{ ansible_env.HOME }}/.p10k.zsh"
        mode: "0644"

    - name: Install nvm
      tags: nvm
      ansible.builtin.import_role:
        name: stephdewit.nvm

    - name: Install pyenv
      tags: pyenv
      ansible.builtin.import_role:
        name: staticdev.pyenv

    - name: Enable passwordless sudo for {{ ansible_user_id }}
      tags: sudo
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/{{ ansible_user_id }}
        line: "{{ ansible_user_id }} ALL=(ALL) NOPASSWD:ALL"
        validate: "visudo -cf %s"
        create: true
        mode: "0440"
      become: true

    - name: Configure git
      tags: git
      community.general.git_config:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        scope: global
      loop:
        - name: user.name
          value: "{{ git_username }}"
        - name: user.email
          value: "{{ git_email }}"

    - name: Install Consolas ligaturized fonts for vscode
      tags: fonts
      ansible.builtin.copy:
        src: "files/fonts/{{ item }}"
        dest: "{{ fonts_path | default('/usr/share/fonts/TTF') }}/{{ item }}"
        mode: "0644"
      become: true
      loop:
        - Consolasligaturizedv3-Bold.ttf
        - Consolasligaturizedv3-BoldItalic.ttf
        - Consolasligaturizedv3-Italic.ttf
        - Consolasligaturizedv3.ttf

    - name: Add Latte Dock config
      tags: latte-dock
      ansible.builtin.copy:
        src: "files/latte-dock/Campbell.layout.latte"
        dest: "{{ ansible_env.HOME }}/.config/latte/templates/Campbell.layout.latte"
        mode: "0644"

    - name: Add Konsole config
      tags: konsole
      ansible.builtin.copy:
        src: "files/konsole/campbell.profile"
        dest: "{{ ansible_env.HOME }}/.local/share/konsole/campbell.profile"
        mode: "0644"

- name: System update
  hosts: localhost
  tasks:
    - name: Apt update all packages
      tags: software-update-all
      ansible.builtin.apt:
        update_cache: true
        name: "*"
        state: latest
        only_upgrade: true
      become: true
